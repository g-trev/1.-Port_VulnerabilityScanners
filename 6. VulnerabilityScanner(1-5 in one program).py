#scans multiple hosts and ports, grabs banners from open ports, checks banners with text file that contains vulnerable software banners

#!/usr/bin/python

import socket 	
#allows us to perform connection, receive data from target
import os 		
#allows us to check whether specified vuln file exist and if it can be read from
import sys
#checkout number of arguments specified in program

def retBanner(ip, port):
		try:
				socket.setdefault(2)
				s = socket.socket()
				s.connect((ip, port))
				banner = s.recv(1024)
				return banners
		except:
				return
				
def checkVulns(banner, filename):
		f = open(filename, "r")
		for line in f.readlines(): 		#function used to read line by line
			if line.strip("\n") in banner:
				print("[+] SERVER IS VULNERABLE: " + banner.strip("\n")
				

def main():
	#2 arguments, first is program, second is file search
	if len(sys.argv) == 2: 
			filename = sys.argv[1]
			if not os.path.isfile(filename):
					print("[x] dile does not exist")
					exit(0)
			#checks if user has permissions to read from file
			if not os.access(filename, os.R_OK):
					print("[x] ACCESS DENIED")
					exit(0)
	#lets user know they need to specify vulnerable filename
	else:
			print("[-] Usage: " + str(sys.argv[0]) + " <vulnerable filename.")
			exit(0)
	portlist = [21, 22, 25, 80, 110, 443, 445]
	for x in range(1,255): 		#scans all devices on network
			ip = "192.168.1." + str(x)
			for port in portlist: 
				banner = retBanner(ip, port)
				if banner:
						print("[+]" + ip + "/" + str(port) + " : " + banner
						checkVulns(banner, filename)
main()